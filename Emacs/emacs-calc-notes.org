#+TITLE: Emacs Calc Notes
#+AUTHOR: Liu Xiang

* Basic

+ =SPC a c=  -->  ~calc-dispatch~
+ =SPC a c G= --> ~calc-grab-region~
+ =SPC a c r= --> ~calc-grab-rectangle~
+ You don't really need the second <RET> in =2 <RET> 3 <RET> +=. That's because
  if you type any operator name or other non-numeric key when you are entering a
  number, the Calculator automatically enters that number and then does the
  requested command. Thus =2 <RET> 3 += will work just as well.
+ Calc uses the =_= (underscore) key to act like the minus sign in a number.
  So, typing =-5 <RET>= won't work because the =-= key will try to do a
  subtraction, but =_5 <RET>= works just fine.
+ You can also press =n=, which means "change sign."
+ The space-bar key (denoted =<SPC>= here) performs the same function as =<RET>=
+ =<TAB>= exchanges the top two stack entries.
+ =Q=  -->  =squre root= , =sqrt()=
+ =h h=  -->  show help
+ =M-0 <DEL>= clears the stack.
+ Calc gives =/= lower precedence than =*=, so that =a/b*c= is interpreted as
  =a/(b*c)=
+ You don't really need any special "mode" to enter algebraic formulas. You can
  enter a formula at any time by pressing the apostrophe (=​'​=) key. Answer the
  prompt with the desired formula, then press =<RET>=.
+ =m a= --> toggle algebraic mode
+ =C-u m a= --> toggle a special incomplete algebraic mode in which the =(= and
  =[= keys use algebraic entry even though regular numeric keys still use RPN
  numeric entry.
+ =m t= --> enter total algbraic mode, =M-m t= quit total algbraic mode
+ In which the =(= and =[= keys use algebraic entry even though regular numeric
  keys still use RPN numeric entry. The notations =$$=, =$$$=, and so on stand
  for higher stack entries.
+ =s s= --> Store into a variable, =s t= --> Store into a variable and remove it
  from stack
+ =s r=  --> Recall a variable
+ The ~=~ key "evaluates" a formula by replacing all its variables by the values
  that were stored in them.
+ If you press a single digit for a variable name (as in =s t 3=, you get one of
  ten "quick variables" =q0= through =q9=. They are "quick" simply because you
  don't have to type the letter =q= or the =<RET>= after their names. In fact, you
  can type simply =s 3= as a shorthand for =s s 3=, and likewise for =t 3= and
  =r 3=.
+ One interesting way to work with variables is to use the "evaluates-to"
  (~=>~) operator. It works like this: Enter a formula algebraically in the
  usual way, but follow the formula with an ~=>~ symbol. (There is also an ~s =~
  command which builds an ~=>~ formula using the stack.) On the stack, you will
  see two copies of the formula with an ~=>~ between them. The lefthand formula
  is exactly like you typed it; the righthand formula has been evaluated as if
  by typing ~=~.
  [[./emacs-calc-notes/media/image1.png]]
+ =U=  --> Undo
+ =D=  --> Redo
+ =x=   --> Execute a function
+ =s + 7=  --> 将值加到 =q7= 变量中

* Mode Setting

+ =p=  --> Set precision
+ =1.23e5= --> =12300=
+ =RET= / =SPC=  --> Duplicate stack entry
+ =F=  --> Convert floating number to integer
+ =c f= --> convert integer to floating number
+ =C-u 2 d f=  --> 保留两位小数
+ =d n=  --> Back to normal
+ =C-u 4 d g=  --> =1,2345,0000=  （ =d , SPC= 设置分隔符）
+ =d r 16=  --> Set radix  (=d 0=, =d 2=, =d 6=, =d 8=)
* Trial

+ =t d=  --> toggle trail display
+ =t ]=  --> Move trial pointer to top of stack
+ =t [=  --> Move trial pointer to bottom of stack
+ =t y=  --> Yank current trial value to
+ =t r=  --> Searh trial
+ =t ?=  --> Help info for trial commands
+ =`=    --> Edit a stack entry

* Arithmetic and Scientific Functions
  
+ =&=  --> 求倒数
+ =R=  --> Round floating number to integer
+ =\=  --> 取余数
+ =%=  --> 取模
+ =Q=  --> Squre root
+ =S=  --> sin
+ =C=  --> cos
+ =T=  --> tan
+ =I S=, =I C=, =I T=  --> 反三角函数
+ =E=  --> e^x
+ =L=  --> log
+ =m d= --> set angle mode to degrees
+ =m r= --> set angle mode to radians
+ =f h=  --> 平方和的平方根
+ =f ...=  --> 一系列便利函

* Vector, Matrix and List

+ =​' [1 2 3; 4 5 6] <RET>=  --> Easy input matrix
+ =v t= Transpose a matrix
+ =k f= 素数分解
+ =C-u 5 v p= 打包为向量
+ =v u= 将向量拆包
+ =v b 4=  --> =[17, 17, 17, 17]=
+ =v x 4=  --> =[1, 2, 3, 4]=
+ =10 1 2 C-u v x=  --> =[1, 3, 5, 7, 9, 11, 13, 15, 17, 19]=
+ =v M= Map
+ =v R= Reduce
+ =v U= Accumulate(like Reduce)
+ =v .= Toggle list abbr
+ =v R X=, =v R f x=, =v R x max=, =u X= max
+ =v R N=, =v R f n=, =v R x min=, =u N= min
+ =u M=, 平均值(mean)
+ =u += sum
+ =v l= length of vector
+ =v M ' $$ - $=
+ =x calc-random=
+ =v v= reverse vector
+ =V S= sort vector
+ =v r= Extract row
+ =v c= Extract column
+ =V M a ==, =V M a <=
+ =v h= head
+ =v k= cons
+ =|= join tow vectors
+ =v s= subvector
+ =v G= produce index of vectors
+ =v += uniq
+ =v M _= map rows
+ =v M := map columns
+ =v R _= reduce rows
+ =v R := reduce columns
+ =v m= mask
+ [ ] 如何计算赎回
* Types Tutorial
** Fraction
   + Use =:= to create a fraction
   + use =c f= to convert a faction to float
   + use =c F= to convert a float to faction
** Complex
   + square root of =-9=, get =(0, 3)=
** Infinite
   + ~​' inf <RET>~
** HMS formats
   [[./emacs-calc-notes/media/image2.png]]
** Date formats
   
   + =​' <11/22/17>=  =>  =<Wed Nov 22, 2017>=
   + Time now: =t N=
** Error form

   [[./emacs-calc-notes/media/image3.png]]
* Date Arithmetic
   + UNIX epoch seconds: =t U=
   + The =t D= (=calc-date=) [=date=] command converts a date form into a
     number, measured in days since Jan 1, 1 AD.
   + The =t C= (=calc-convert-time-zones=) [=tzconv=] command converts a
     date form from one time zone to another.
   + The =t P= (=calc-date-part=) command extracts one part of a date form.
     The prefix argument specifies the part; with no argument, this command
     prompts for a part code from 1 to 9. The various part codes are described
     in the following paragraphs.
   + The =t M= (=calc-new-month=) [=newmonth=] command computes a new date
     form that represents the first day of the month specified by the input
     date. The result is always a pure date form; only the year and month
     numbers of the input are retained. With a numeric prefix argument N in the
     range from 1 to 31, =t M= computes the Nth day of the month. (If N is
     greater than the actual number of days in the month, or if N is zero, the
     last day of the month is used.)
   + The =t Y= (=calc-new-year=) [=newyear=] command computes a new pure
     date form that represents the first day of the year specified by the input.
     The month, day, and time of the input date form are lost. With a numeric
     prefix argument N in the range from 1 to 366, =t Y= computes the Nth day
     of the year (366 is treated as 365 in non-leap years). A prefix argument of
     0 computes the last day of the year (December 31). A negative prefix
     argument from -1 to -12 computes the first day of the Nth month of the
     year.
   + The =t W= (=calc-new-week=) [=newweek=] command computes a new pure
     date form that represents the Sunday on or before the input date. With a
     numeric prefix argument, it can be made to use any day of the week as the
     starting day; the argument must be in the range from 0 (Sunday) to 6
     (Saturday). This function always subtracts between 0 and 6 days from the
     input date.
   + The =t I= (=calc-inc-month=) [=incmonth=] command increases a date
     form by one month, or by an arbitrary number of months specified by a
     numeric prefix argument. The time portion, if any, of the date form stays
     the same. The day also stays the same, except that if the new month has
     fewer days the day number may be reduced to lie in the valid range. For
     example, =incmonth(<Jan 31, 1991>)= produces =<Feb 28, 1991>=. Because
     of this, =t I t I= and =M-2 t I= do not always give the same results
     (=<Mar 28, 1991>= versus =<Mar 31, 1991>= in this case).
   + The =t += (=calc-business-days-plus=) [=badd=] and =t -=
     (=calc-business-days-minus=) [=bsub=] commands perform arithmetic using
     business days. For =t +=, one argument must be a date form and the other
     must be a real number (positive or negative). If the number is not an
     integer, then a certain amount of time is added as well as a number of
     days; for example, adding 0.5 business days to a time in Friday evening
     will produce a time in Monday morning. It is also possible to add an HMS
     form; adding =12@ 0' 0"= also adds half a business day. For =t -=, the
     arguments are either a date form and a number or HMS form, or two date
     forms, in which case the result is the number of business days between the
     two dates.
* Algebra
  
  #+BEGIN_EXAMPLE
     1:  (34 x - 24 x^3) / x    1:  34 - 24 x^2
         .                          .

         ' x <RET> /                  a x

     1:  0.70588 x^2 = 1        1:  x = 1.19023
         .                          .

         0 a =  s 3                 a S x <RET>
  #+END_EXAMPLE
* Basic Programming
** Algebra as Function
   : Z F
** Keyboard Macro
   : Z K
** Loop
   + =Z < a d x <RET> Z >=
   + =Z ( & + 1 Z )=
